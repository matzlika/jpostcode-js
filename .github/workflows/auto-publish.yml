name: Auto Publish to npm on Submodule Update

on:
  schedule:
    - cron: "0 1 1 * *"  # Runs daily at 1 AM UTC
  workflow_dispatch:  # Allows manual trigger
  push:
    paths:
      - "jpostcode-data/**"  # Replace with your actual submodule path
    branches:
      - main

jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Check for submodule updates
        id: check_submodule
        run: |
          if curl -s "https://api.github.com/repos/kufu/jpostcode-data/pulls" |jq '.[].title'|grep -q "bundle exec rake jpostcode:data:update_all"; then
            echo 'has a pull request'
            echo "SUBMODULE_CHANGED=true" >> $GITHUB_ENV
          else
            echo 'no pull requests'
          fi

      - name: Fetch the Pull Request
        if: env.SUBMODULE_CHANGED == 'true'
        run: |
          pr_number=$(node scripts/find-pull-request.js)
          if [[ "$pr_number" != "undefined" && -n "$pr_number" ]]; then
              echo "処理を実行: $pr_number"
              cd jpostcode-data && git fetch origin refs/pull/$pr_number/merge:pr-$pr_number && git checkout pr-$pr_number
          else
              echo "出力がundefinedのため、処理をスキップ"
              echo "SUBMODULE_CHANGED=false" >> $GITHUB_ENV
          fi

      - name: Configure Git
        if: env.SUBMODULE_CHANGED == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"

      - name: Extract major and minor version & set new version
        if: env.SUBMODULE_CHANGED == 'true'
        run: |
          MAJOR_MINOR=$(jq -r '.version' package.json | awk -F. '{print $1"."$2}')
          TIMESTAMP=$(date +'%Y%m')
          NEW_VERSION="$MAJOR_MINOR.$TIMESTAMP"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          jq --arg v "$NEW_VERSION" '.version = $v' package.json > temp.json && mv temp.json package.json
          echo "Updated package.json version to $NEW_VERSION"

      - name: Commit & Push Changes
        if: env.SUBMODULE_CHANGED == 'true'
        run: |
          git add package.json
          git add jpostcode-data
          git commit -m "Updated package.json version to $NEW_VERSION due to submodule update"
          git push origin main

      - name: Tag the repository with the timestamp
        if: env.SUBMODULE_CHANGED == 'true'
        run: |
          TAG_NAME=$NEW_VERSION
          git tag -a "$TAG_NAME" -m "Submodule updated on $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin "$TAG_NAME"

      - name: Publish to npm
        if: env.SUBMODULE_CHANGED == 'true'
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          npm install
          npm run build
          npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
